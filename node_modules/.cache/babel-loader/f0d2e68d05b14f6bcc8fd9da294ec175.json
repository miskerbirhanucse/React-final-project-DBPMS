{"ast":null,"code":"class HttpService {\n  constructor() {\n    this.url = \"http://localhost:8000/api\";\n\n    this.postData = async (item, added_url, tokenId = \"\") => {\n      const token = await localStorage.getItem(tokenId);\n      const requestOptions = this.postRequestOptions(token, item);\n      return fetch(this.url + \"/\" + added_url, requestOptions).then(response => response.json());\n    };\n\n    this.getData = async (added_url, tokenId = \"\") => {\n      const token = await localStorage.getItem(tokenId);\n      const requestOptions = this.getRequestOptions(token);\n      return fetch(this.url + \"/\" + added_url, requestOptions).then(response => response.json());\n    };\n\n    this.getRequestOptions = token => {\n      let requestOptions = {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Bearer ' + token,\n          'Content-type': 'application/json'\n        }\n      };\n      return requestOptions;\n    };\n\n    this.postRequestOptions = (token, item) => {\n      let requestOptions = {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer ' + token,\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(item)\n      };\n      return requestOptions;\n    };\n  }\n\n}\n\nexport default HttpService;","map":{"version":3,"sources":["C:/Users/admin/Desktop/react/finalproject/src/services/HttpService.js"],"names":["HttpService","url","postData","item","added_url","tokenId","token","localStorage","getItem","requestOptions","postRequestOptions","fetch","then","response","json","getData","getRequestOptions","method","headers","body","JSON","stringify"],"mappings":"AAAA,MAAMA,WAAN,CAAkB;AAAA;AAAA,SACdC,GADc,GACR,2BADQ;;AAAA,SAEdC,QAFc,GAEH,OAAOC,IAAP,EAAaC,SAAb,EAAwBC,OAAO,GAAG,EAAlC,KAAyC;AAChD,YAAMC,KAAK,GAAG,MAAMC,YAAY,CAACC,OAAb,CAAqBH,OAArB,CAApB;AACA,YAAMI,cAAc,GAAG,KAAKC,kBAAL,CAAwBJ,KAAxB,EAA+BH,IAA/B,CAAvB;AACA,aAAOQ,KAAK,CAAC,KAAKV,GAAL,GAAW,GAAX,GAAiBG,SAAlB,EAA6BK,cAA7B,CAAL,CAAkDG,IAAlD,CACHC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADT,CAAP;AAGH,KARa;;AAAA,SASdC,OATc,GASJ,OAAOX,SAAP,EAAkBC,OAAO,GAAG,EAA5B,KAAmC;AACzC,YAAMC,KAAK,GAAG,MAAMC,YAAY,CAACC,OAAb,CAAqBH,OAArB,CAApB;AACA,YAAMI,cAAc,GAAG,KAAKO,iBAAL,CAAuBV,KAAvB,CAAvB;AACA,aAAOK,KAAK,CAAC,KAAKV,GAAL,GAAW,GAAX,GAAiBG,SAAlB,EAA6BK,cAA7B,CAAL,CAAkDG,IAAlD,CACHC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADT,CAAP;AAGH,KAfa;;AAAA,SAgBdE,iBAhBc,GAgBOV,KAAD,IAAW;AAC3B,UAAIG,cAAc,GAAG;AACjBQ,QAAAA,MAAM,EAAE,KADS;AAEjBC,QAAAA,OAAO,EAAE;AACL,2BAAiB,YAAYZ,KADxB;AAEL,0BAAgB;AAFX;AAFQ,OAArB;AAOA,aAAOG,cAAP;AACH,KAzBa;;AAAA,SA0BdC,kBA1Bc,GA0BO,CAACJ,KAAD,EAAQH,IAAR,KAAiB;AAClC,UAAIM,cAAc,GAAG;AACjBQ,QAAAA,MAAM,EAAE,MADS;AAEjBC,QAAAA,OAAO,EAAE;AACL,2BAAiB,YAAYZ,KADxB;AAEL,0BAAgB;AAFX,SAFQ;AAMjBa,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAelB,IAAf;AANW,OAArB;AAQA,aAAOM,cAAP;AACH,KApCa;AAAA;;AAAA;;AAsClB,eAAeT,WAAf","sourcesContent":["class HttpService {\r\n    url = \"http://localhost:8000/api\";\r\n    postData = async (item, added_url, tokenId = \"\") => {\r\n        const token = await localStorage.getItem(tokenId);\r\n        const requestOptions = this.postRequestOptions(token, item);\r\n        return fetch(this.url + \"/\" + added_url, requestOptions).then(\r\n            response => response.json()\r\n        )\r\n    }\r\n    getData = async (added_url, tokenId = \"\") => {\r\n        const token = await localStorage.getItem(tokenId);\r\n        const requestOptions = this.getRequestOptions(token);\r\n        return fetch(this.url + \"/\" + added_url, requestOptions).then(\r\n            response => response.json()\r\n        )\r\n    }\r\n    getRequestOptions = (token) => {\r\n        let requestOptions = {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token,\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n        return requestOptions;\r\n    }\r\n    postRequestOptions = (token, item) => {\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token,\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(item)\r\n        }\r\n        return requestOptions;\r\n    }\r\n}\r\nexport default HttpService;"]},"metadata":{},"sourceType":"module"}