{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\React DBPMS\\\\src\\\\Guards.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Guard = ({\n  component: Component,\n  token: Token,\n  routeRedirect,\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(Route, { ...rest,\n  render: props => localStorage.getItem(Token) ? /*#__PURE__*/_jsxDEV(Component, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: {\n      pathname: routeRedirect,\n      state: {\n        from: props.location\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 13\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 5\n}, this);\n_c = Guard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Guard\");","map":{"version":3,"sources":["C:/xampp/htdocs/React DBPMS/src/Guards.js"],"names":["React","Route","Redirect","Guard","component","Component","token","Token","routeRedirect","rest","props","localStorage","getItem","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AACA,OAAO,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,KAAK,EAAEC,KAA/B;AAAsCC,EAAAA,aAAtC;AAAqD,KAAGC;AAAxD,CAAD,kBACjB,QAAC,KAAD,OAAWA,IAAX;AAAiB,EAAA,MAAM,EAAEC,KAAK,IAC1BC,YAAY,CAACC,OAAb,CAAqBL,KAArB,iBACI,QAAC,SAAD,OAAeG;AAAf;AAAA;AAAA;AAAA;AAAA,UADJ,gBAEI,QAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AAAEG,MAAAA,QAAQ,EAAEL,aAAZ;AAA2BM,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAEL,KAAK,CAACM;AAAd;AAAlC;AAAd;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA,QADG;KAAMb,K","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nexport const Guard = ({ component: Component, token: Token, routeRedirect, ...rest }) => (\r\n    <Route {...rest} render={props => (\r\n        localStorage.getItem(Token) ?\r\n            <Component {...props} /> :\r\n            <Redirect to={{ pathname: routeRedirect, state: { from: props.location } }} />\r\n    )} />\r\n);"]},"metadata":{},"sourceType":"module"}